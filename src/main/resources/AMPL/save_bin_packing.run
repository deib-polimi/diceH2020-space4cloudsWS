# vim: set filetype=ampl : #

# Copyright 2016 Eugenio Gianniti
# Copyright 2016 Jacopo Rigoli
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

##############################################
### Bin packing results saving utility     ###
### Eugenio Gianniti 20/06/2016            ###
##############################################

printf "### Saved solution ###\n" > (solfile);
printf "### Bin packing problem ###\n\n" >> (solfile);

#avoid table view of displays
option display_1col 100000000;

display solve_result >> (solfile);

printf "### Objective\n" >> (solfile);
display bin_packing_obj >> (solfile);

printf "### Variables\n" >> (solfile);
display x >> (solfile);

option omit_zero_rows 1;
display y >> (solfile);
display n >> (solfile);

#deault
option omit_zero_rows 0;
display p >> (solfile);

printf "### Rejections\n" >> (solfile);
var rej = sum{i in AM} (max{j in H[i]} j - sum {j in H[i]} (j * x[i, j]));
printf "var: rej:= %d\n\n",rej  >> (solfile);

printf "### Servers\n" >> (solfile);
var s = sum{i in P} y[i];
printf "var: s:= %d\n\n", s >> (solfile);


printf "### Concurrency\n" >> (solfile);
printf "param: h :=\n" >> (solfile);
for {i in AM}
  {
    printf "%d %d\n", i, sum {j in H[i]} (j * x[i, j]) >> (solfile);
  }
printf ";\n\n" >> (solfile);

close (solfile);
